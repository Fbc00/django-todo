{"ast":null,"code":"import axios from \"axios\";\nimport settings from \"@/settings\";\nimport router from \"@/router\";\nconst api = axios.create({\n  baseURL: settings.apiBaseUrl\n});\nexport function beforeRequest(config) {\n  const loggedUser = window.localStorage.getItem(\"loggedUser\");\n  const loggedUserToken = window.localStorage.getItem(\"loggedUserToken\");\n\n  if (loggedUser) {\n    config.headers[\"X-Authorization-UserId\"] = `${loggedUser}`;\n    config.headers[\"X-Authorization-UserToken\"] = `${loggedUserToken}`;\n  }\n\n  return config;\n}\nexport function requestError(error) {\n  return Promise.reject(error);\n}\napi.interceptors.request.use(beforeRequest, requestError);\nexport function getSuccessResponse(response) {\n  return response;\n}\nexport function getResponseError(error) {\n  if (error.response && error.response.status == 401) {\n    router.push({\n      name: \"login\"\n    });\n  }\n\n  return Promise.reject(error);\n}\napi.interceptors.response.use(getSuccessResponse, getResponseError);\nexport default api;","map":{"version":3,"names":["axios","settings","router","api","create","baseURL","apiBaseUrl","beforeRequest","config","loggedUser","window","localStorage","getItem","loggedUserToken","headers","requestError","error","Promise","reject","interceptors","request","use","getSuccessResponse","response","getResponseError","status","push","name"],"sources":["/home/danielsilva/workspace/Front-end-parte2/estudos-vuetify/meu-todo-vuetify/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\nimport settings from \"@/settings\";\nimport router from \"@/router\";\n\nconst api = axios.create({\n  baseURL: settings.apiBaseUrl,\n});\n\nexport function beforeRequest(config) {\n  const loggedUser = window.localStorage.getItem(\"loggedUser\");\n  const loggedUserToken = window.localStorage.getItem(\"loggedUserToken\");\n\n  if (loggedUser) {\n    config.headers[\"X-Authorization-UserId\"] = `${loggedUser}`;\n    config.headers[\"X-Authorization-UserToken\"] = `${loggedUserToken}`;\n  }\n  return config;\n}\n\nexport function requestError(error) {\n  return Promise.reject(error);\n}\n\napi.interceptors.request.use(beforeRequest, requestError);\n\nexport function getSuccessResponse(response) {\n  return response;\n}\n\nexport function getResponseError(error) {\n  if (error.response && error.response.status == 401) {\n    router.push({ name: \"login\" });\n  }\n  return Promise.reject(error);\n}\n\napi.interceptors.response.use(getSuccessResponse, getResponseError);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;EACvBC,OAAO,EAAEJ,QAAQ,CAACK;AADK,CAAb,CAAZ;AAIA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;EACpC,MAAMC,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAnB;EACA,MAAMC,eAAe,GAAGH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,CAAxB;;EAEA,IAAIH,UAAJ,EAAgB;IACdD,MAAM,CAACM,OAAP,CAAe,wBAAf,IAA4C,GAAEL,UAAW,EAAzD;IACAD,MAAM,CAACM,OAAP,CAAe,2BAAf,IAA+C,GAAED,eAAgB,EAAjE;EACD;;EACD,OAAOL,MAAP;AACD;AAED,OAAO,SAASO,YAAT,CAAsBC,KAAtB,EAA6B;EAClC,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AAEDb,GAAG,CAACgB,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6Bd,aAA7B,EAA4CQ,YAA5C;AAEA,OAAO,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C,OAAOA,QAAP;AACD;AAED,OAAO,SAASC,gBAAT,CAA0BR,KAA1B,EAAiC;EACtC,IAAIA,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACO,QAAN,CAAeE,MAAf,IAAyB,GAA/C,EAAoD;IAClDvB,MAAM,CAACwB,IAAP,CAAY;MAAEC,IAAI,EAAE;IAAR,CAAZ;EACD;;EACD,OAAOV,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AAEDb,GAAG,CAACgB,YAAJ,CAAiBI,QAAjB,CAA0BF,GAA1B,CAA8BC,kBAA9B,EAAkDE,gBAAlD;AAEA,eAAerB,GAAf"},"metadata":{},"sourceType":"module"}