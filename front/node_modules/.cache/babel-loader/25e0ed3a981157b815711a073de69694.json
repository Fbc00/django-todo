{"ast":null,"code":"import TasksApi from \"@/TasksApi.js\";\nexport default {\n  data: () => {\n    return {\n      interval: {},\n      query: false,\n      newCourse: {\n        name: \"\"\n      },\n      ListaDeTarefas: Array,\n      listaDeCursos: Array,\n      loading: false,\n      exibir: {\n        formGroups: false,\n        listaGroups: true\n      }\n    };\n  },\n  methods: {\n    vaiParaInicio() {\n      this.$router.push(\"/\");\n    },\n\n    listarTarefas(nomeTarefa) {\n      this.$router.push({\n        name: \"TasksList\",\n        params: {\n          filtro: nomeTarefa\n        }\n      });\n    },\n\n    cadastroGrupos() {\n      this.$router.push(\"/groupsForm\");\n    },\n\n    recebiSalvar(data) {\n      TasksApi.createGroups(data, () => {\n        this.newCourse.name = \"\";\n        this.listarGrupos();\n      });\n    },\n\n    excluirGrupo(tarefaId) {\n      TasksApi.delGroups(tarefaId, () => {\n        this.listarGrupos();\n      });\n    },\n\n    listarGrupos() {\n      TasksApi.getGroups(data => {\n        this.listaDeCursos = data;\n      });\n    },\n\n    salvarTarefas() {\n      TasksApi.getTasks(data => {\n        this.ListaDeTarefas = data;\n      });\n    },\n\n    calculaQuantidade(nome) {\n      return this.ListaDeTarefas.filter(titulo => titulo.project.includes(nome));\n    }\n\n  },\n\n  created() {\n    this.salvarTarefas();\n    this.listarGrupos();\n\n    if (this.$route.params.name != undefined) {\n      if (this.$route.params.name.length > 0) {\n        this.newCourse.name = this.$route.params.name;\n        this.recebiSalvar(this.newCourse);\n      }\n    }\n  },\n\n  mounted() {\n    this.interval = setInterval(() => {\n      if (this.value === 100) {\n        return this.value = 0;\n      }\n\n      this.value += 10;\n    }, 1000);\n  }\n\n};","map":{"version":3,"mappings":"AAwCA;AACA;EACAA;IACA;MACAC,YADA;MAEAC,YAFA;MAGAC;QACAC;MADA,CAHA;MAMAC,qBANA;MAOAC,oBAPA;MAQAC,cARA;MASAC;QACAC,iBADA;QAEAC;MAFA;IATA;EAcA,CAhBA;EAiBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QAAAT;QAAAU;UAAAC;QAAA;MAAA;IACA,CANA;;IAOAC;MACA;IACA,CATA;;IAUAC;MACAC;QACA;QACA;MACA,CAHA;IAIA,CAfA;;IAgBAC;MACAD;QACA;MACA,CAFA;IAGA,CApBA;;IAqBAE;MACAF;QACA;MACA,CAFA;IAGA,CAzBA;;IA0BAG;MACAH;QACA;MACA,CAFA;IAGA,CA9BA;;IA+BAI;MACA,4CACAC,6BADA;IAGA;;EAnCA,CAjBA;;EAsDAC;IACA;IACA;;IACA;MACA;QACA;QACA;MACA;IACA;EACA,CA/DA;;EAgEAC;IACA;MACA;QACA;MACA;;MACA;IACA,CALA,EAKA,IALA;EAMA;;AAvEA","names":["data","interval","query","newCourse","name","ListaDeTarefas","listaDeCursos","loading","exibir","formGroups","listaGroups","methods","vaiParaInicio","listarTarefas","params","filtro","cadastroGrupos","recebiSalvar","TasksApi","excluirGrupo","listarGrupos","salvarTarefas","calculaQuantidade","titulo","created","mounted"],"sourceRoot":"src/views","sources":["ResumePainel.vue"],"sourcesContent":["<template>\n  <v-container class=\"d-flex flex-column justify-space-around\" fill-height>\n    <v-col class=\"d-flex flex-column align-center\">\n      <v-btn\n        class=\"align-self-end\"\n        color=\"accent\"\n        elevation=\"2\"\n        rounded\n        x-large\n        @click=\"vaiParaInicio\"\n      >\n        Logout\n      </v-btn>\n      <h1>O resumo das suas tarefas</h1>\n    </v-col>\n    <!-- Lista de Grupos -->\n    <v-container v-for=\"curso in listaDeCursos\" :key=\"curso.id\">\n      <v-col class=\"d-flex flex-column align-center\">\n        <a @click=\"listarTarefas(curso.name)\">{{ curso.name }}</a>\n        <v-progress-linear\n          :value=\"\n            (calculaQuantidade(curso.name).length / ListaDeTarefas.length) * 100\n          \"\n          height=\"25\"\n          rounded\n          :indeterminate=\"query\"\n          :query=\"true\"\n          style=\"max-width: 500px\"\n        ></v-progress-linear>\n        <v-btn @click=\"excluirGrupo(curso.id)\">Excluir</v-btn>\n      </v-col>\n    </v-container>\n    <!-- Fim Lista de Grupos -->\n    <v-col class=\"d-flex flex-column align-center\">\n      <v-btn @click=\"cadastroGrupos\">Editar Grupos</v-btn>\n    </v-col>\n  </v-container>\n</template>\n\n<script>\nimport TasksApi from \"@/TasksApi.js\";\nexport default {\n  data: () => {\n    return {\n      interval: {},\n      query: false,\n      newCourse: {\n        name: \"\",\n      },\n      ListaDeTarefas: Array,\n      listaDeCursos: Array,\n      loading: false,\n      exibir: {\n        formGroups: false,\n        listaGroups: true,\n      },\n    };\n  },\n  methods: {\n    vaiParaInicio() {\n      this.$router.push(\"/\");\n    },\n    listarTarefas(nomeTarefa) {\n      this.$router.push({ name: \"TasksList\", params: { filtro: nomeTarefa } });\n    },\n    cadastroGrupos() {\n      this.$router.push(\"/groupsForm\");\n    },\n    recebiSalvar(data) {\n      TasksApi.createGroups(data, () => {\n        this.newCourse.name = \"\";\n        this.listarGrupos();\n      });\n    },\n    excluirGrupo(tarefaId) {\n      TasksApi.delGroups(tarefaId, () => {\n        this.listarGrupos();\n      });\n    },\n    listarGrupos() {\n      TasksApi.getGroups((data) => {\n        this.listaDeCursos = data;\n      });\n    },\n    salvarTarefas() {\n      TasksApi.getTasks((data) => {\n        this.ListaDeTarefas = data;\n      });\n    },\n    calculaQuantidade(nome) {\n      return this.ListaDeTarefas.filter((titulo) =>\n        titulo.project.includes(nome)\n      );\n    },\n  },\n  created() {\n    this.salvarTarefas();\n    this.listarGrupos();\n    if (this.$route.params.name != undefined) {\n      if (this.$route.params.name.length > 0) {\n        this.newCourse.name = this.$route.params.name;\n        this.recebiSalvar(this.newCourse);\n      }\n    }\n  },\n  mounted() {\n    this.interval = setInterval(() => {\n      if (this.value === 100) {\n        return (this.value = 0);\n      }\n      this.value += 10;\n    }, 1000);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}